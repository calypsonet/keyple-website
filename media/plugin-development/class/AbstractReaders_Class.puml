@startuml
title
    Keyple Plugin - Abstract Reader classes- 1.0.0 (10/11/2020)
end title

' == THEME ==

'Couleurs issues de : https://htmlcolorcodes.com/fr/tableau-de-couleur/tableau-de-couleur-design-plat/
!define C_GREY1 F8F9F9
!define C_GREY2 F2F3F4
!define C_GREY3 E5E7E9
!define C_GREY4 D7DBDD
!define C_GREY5 CACFD2
!define C_GREY6 BDC3C7
!define C_LINK 3498DB
!define C_USE 27AE60

skinparam Shadowing false
skinparam ClassFontStyle italic
skinparam ClassBorderColor #D4AC0D
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
' Red
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
' Purple
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
' blue
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
' Green
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
' Grey
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype

' == CONTENT ==
+interface ProxyReader {
}

package "org.eclipse.keyple.core.plugin" as root {

    package "reader"{

        +abstract class AbstractReader{
            +String getName()
            +String getPluginName()
            +List<CardSelectionResponse> transmitCardSelectionRequests(List<CardSelectionRequest> cardSelectionRequests,
            MultiSelectionProcessing multiSelectionProcessing, ChannelControl channelControl)
            +CardResponse transmitCardRequest(CardRequest cardRequest,
            ChannelControl channelControl)
            +void register()
            +void unregister()
            #void checkStatus()
            #{abstract} List<CardSelectionResponse> processCardSelectionRequests(List<CardSelectionRequest> cardSelectionRequests,
            MultiSelectionProcessing multiSelectionProcessing,ChannelControl channelControl)
            #{abstract} CardResponse processCardRequest(CardRequest cardRequest, ChannelControl channelControl)
        }

        +abstract class AbstractLocalReader{
            +boolean isCardPresent()
            +void releaseChannel()
            +void activateProtocol(String readerProtocolName, String applicationProtocolName)
            +void deactivateProtocol(String readerProtocolName)
            #void closeLogicalAndPhysicalChannels()
            #List<CardSelectionResponse> processCardSelectionRequests(List<CardSelectionRequest> cardSelectionRequests,
            MultiSelectionProcessing multiSelectionProcessing,ChannelControl channelControl)
            #CardResponse processCardRequest()
            #{abstract} boolean checkCardPresence()
            #{abstract} byte[] getATR()
            #{abstract} void openPhysicalChannel()
            #{abstract} void closePhysicalChannel()
            #{abstract} boolean isPhysicalChannelOpen()
            #{abstract} boolean isCurrentProtocol(String readerProtocolName)
            #{abstract} byte[] transmitApdu(byte[] apduIn)
            #{abstract} void activateReaderProtocol(String readerProtocolName)
            #{abstract} void deactivateReaderProtocol(String readerProtocolName)
         }

         +abstract class AbstractObservableLocalReader{
            #{abstract} void onStartDetection()
            #{abstract} void onStopDetection()
            #{abstract} ReaderObservationExceptionHandler getObservationExceptionHandler()
            +void addObserver(final ObservableReader.ReaderObserver observer)
            +void removeObserver(final ObservableReader.ReaderObserver observer)
            +void notifyObservers(final ReaderEvent event)
            +int countObservers()
            +void clearObservers()
            +boolean isCardPresent()
            +void startCardDetection(ObservableReader.PollingMode pollingMode)
            +void stopCardDetection()
            +void setDefaultSelectionRequest(AbstractDefaultSelectionsRequest defaultSelectionsRequest,
            ObservableReader.NotificationMode notificationMode)
            +void setDefaultSelectionRequest(AbstractDefaultSelectionsRequest defaultSelectionsRequest,
            ObservableReader.NotificationMode notificationMode,ObservableReader.PollingMode pollingMode)
            +void terminateCardCommunication()
            +void finalizeCardProcessing()
            +void unregister()
            #void onEvent(InternalEvent event)

         }

         +abstract class AbstractObservableLocalAutonomousReader{
            #void void onCardInserted()
            #void void onCardRemoved()
         }
    }
}


' Associations
ProxyReader <|-- AbstractReader #C_USE
AbstractReader <|-- AbstractLocalReader #C_USE
AbstractLocalReader <|-- AbstractObservableLocalReader #C_USE
AbstractObservableLocalReader <|-- AbstractObservableLocalAutonomousReader #C_USE


@enduml